name: prerelease

on:
  push:
    branches:
      - beta

jobs:
  prerelease:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Read version file and build file names
        id: read_version
        run: |
          echo "version=$(cat About/Version.txt)" >> $GITHUB_OUTPUT
          echo "version_v=v$(cat About/Version.txt)" >> $GITHUB_OUTPUT
          echo "gl_zip=Geological_Landforms_v$(cat About/Version.txt).zip" >> $GITHUB_OUTPUT
          echo "bt_zip=Biome_Transitions_v$(cat About/Version.txt).zip" >> $GITHUB_OUTPUT

      - name: Create GL release zip
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: ${{ steps.read_version.outputs.gl_zip }}
          exclusions: '/.git/* /Sources/* /AddOn/* /.github/* .git* *.pdb'

      - name: Create BT release zip
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          directory: 'AddOn/BiomeTransitions'
          filename: ${{ steps.read_version.outputs.bt_zip }}
          exclusions: '/.git/* /Sources/* .git*'

      - name: Read changelog
        id: read_changelog
        run: |
          awk -v RS= 'NR==2 {print > ("LatestChanges.txt")}' Changelog.md
          echo 'changes<<EOF' >> $GITHUB_OUTPUT
          echo "$(cat LatestChanges.txt)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          echo 'changes_h<<EOF' >> $GITHUB_OUTPUT
          echo "Update $(cat About/Version.txt)" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "$(cat LatestChanges.txt)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ format('{0},AddOn/BiomeTransitions/{1}', steps.read_version.outputs.gl_zip, steps.read_version.outputs.bt_zip) }}
          body: ${{ steps.read_changelog.outputs.changes }}
          name: ${{ format('Geological Landforms v{0}', steps.read_version.outputs.version) }}
          tag: ${{ steps.read_version.outputs.version_v }}
          commit: ${{ github.sha }}
          makeLatest: false
          prerelease: true
